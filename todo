+ 1. Оптимизировать работу с ActiveRecord.
+ Применить Range Conditions.
- Сегодняшний день (ещё один способ): (Time.now.midnight)..(Time.now.midnight + 1.day)
+ Group - можно использовать, чтобы получить даты, на которые запланированы повторы. Having - можно использовать, чтобы узнать, в какие дни выполнялось какое-нибудь конкретное условие.
- reverse_order
+ использовать minimum там, где нужно

+ 1а. Смёрджить ветку "Деплоймент".

+ 3. Вывести имя пользователя в меню.

+ 7. Сменить формат на выводе. Сейчас <p> и <br> расставляются не так, как хотелось бы.

+ 14. Приписать даты к списку карточек.

+ 12. Научиться копировать из одной базы данных (с имеющейся структурой) в другую.
Пока порядок действий такой:
- добавить в database.yml новую базу (см. Recipe 3)
- создать модели, в которые просто вписать две строки:
    establish_connection :wordhub
    set_table_name "repetitions"
  Миграции не запускать.
С этого момента уже можно использовать эту базу и все поля таблиц, как обычные методы ActiveRecord.
Сейчас вся подготовительная работа проведена, создан метод в модели User. Всё копируется. Для этого пришлось убрать все before_save и after_save (чтобы юзер не проверялся на наличие пароля и чтобы после добавления каждой новой карточки не создавался лишний повтор).
Всё это сделано в recipes/db_transition, где эту операцию и можно произвести.
Функционал паролей без соли в основном приложении тоже написан, и может быть использован тогда, когда будет нужен.

2. Прикрутить регистрацию.

5. В set_first_repetition вместо Date.today вписать значение session[:date] (и вообще понять, почему это значение нельзя вставлять в модели)

6. Подсветить активный пункт меню.

8. Заимплементить такую архитектуру: страница принимает все повторы на сегодня и сама выбирает случайный; Аяксом отправляется форма, как и сейчас, а в ответ принимается только факт того, что запрос обработан (render :nothing => true). Все значения вычисляются внутри браузера. Единственное, что нужно принимать ещё, - количество карточек на сегодня. Если оно не совпадает с тем, что думает браузер, страница перезагружается (или Аяксом принимается новый набор карточек). Есть ещё опция в render :text => "Какой-то текст". А ещё есть такое: render :json => @my_object

9. Включить в карточках горизонтальный скроллинг, аналогично тому, как это сделано на guides.rubyonrails.org. Модернайзером проверять, способен ли браузер делать скролл по тачу.

10. Добавить функционал множественных наборов карточек.

11. Проверить, что все эксепшены (например, в find или save) в ActiveRecord корректно обрабатываются.

13. Определять часовой пояс клиента. Например, с помощью этого gem'а: https://github.com/scottwater/detect_timezone_rails.

15. Почему из базы не удаляются объекты, которые были удалены?

Прочитать:

- как писать комментарии (в том числе, многострочные; и общие принципы написания комментариев)

- как писать юнит-тесты

- про циклы и итераторы в Руби

- про Rails и Аякс